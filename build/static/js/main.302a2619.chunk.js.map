{"version":3,"sources":["Components/Home.jsx","Components/Nav.jsx","Components/Header.jsx","Components/ErrDisplayer.jsx","Components/Voter.jsx","Components/ArticleCard.jsx","Components/Loader.jsx","Components/DeleteComment.jsx","Components/CommentCard.jsx","Components/AddComment.jsx","Components/CommentsList.jsx","Components/SingleArticle.jsx","Components/Sorter.jsx","Components/ArticleList.jsx","Components/TopicCard.jsx","Components/TopicList.jsx","Components/ArticleListByTopic.jsx","Components/HomePage.jsx","App.js","serviceWorker.js","index.js","utils/api.js"],"names":["Home","className","to","id","src","alt","height","width","Nav","Header","username","ErrDisplayer","err","msg","Voter","state","currentVote","handleClick","event","name","target","setState","currentState","api","props","type","catch","this","onClick","disabled","votes","Component","ArticleCard","article_id","title","comment_count","created_at","Loader","DeleteComment","comment_id","getComments","author","preventDefault","then","CommentCard","body","AddComment","handleChange","value","handleSubmit","replace","length","onChange","required","CommentsList","comments","isLoading","data","response","prevProps","prevState","map","comment","key","SingleArticle","article","getArticle","topic","Sorter","handleSortbyChange","ArticleList","articles","sortby","getArticles","topic_slug","criteria","console","log","path","TopicCard","slug","description","TopicList","topics","getTopics","SingleTopic","HomePage","App","ArticleListByTopic","default","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","axios","require","exports","fetchAllArticles","sort_by","get","params","fetchArticle","fetchAllTopics","fetchArticleCommentsByArticleID","postNewComment","post","deleteComment","delete","patchVotes","vote","patch"],"mappings":"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","file":"static/js/main.302a2619.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nconst Home = () => {\n  return (\n    <div className='Home'>\n      <Link to=\"/articles\">\n        <img\n          id='Home'\n          src=\"https://cdn-images-1.medium.com/max/184/1*LdnSztHVYhhd8K8EqlgCJQ@2x.png\"\n          alt=\"NC-Logo\"\n          height=\"70\"\n          width=\"70\"\n        />\n      </Link>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nconst Nav = () => {\n  return (\n    <div> \n      <nav className='Nav'>\n        <Link to=\"/articles\">\n          <button className='NavButtons'>Articles</button>\n        </Link>\n\n        <Link to=\"/topics\">\n          <button className='NavButtons'>Topics </button>\n        </Link>\n\n        <Link to=\"/users\">\n          <button className='NavButtons'>Users</button>\n        </Link>\n      </nav>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport Home from \"./Home\";\nimport Nav from \"./Nav\";\n\nconst Header = ({username}) => {\n  return (\n    <div className='Header'>\n      <Home />\n      <Nav />\n      Logged in as: {username}\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst ErrDisplayer = ({ err }) => {\n  const msg = err ? err : \"Page not found\";\n  return <h5>{msg}</h5>;\n};\n\nexport default ErrDisplayer;\n","import React, { Component } from \"react\";\nimport * as api from \"../utils/api\";\nimport ErrDisplayer from \"./ErrDisplayer\";\n\nclass Voter extends Component {\n  state = {\n    currentVote: 0,\n    err: \"\"\n  };\n\n  handleClick = event => {\n    const { name } = event.target;\n    this.setState(currentState => {\n      return {\n        currentVote: currentState.currentVote + +name\n      };\n    });\n    api.patchVotes(this.props.type, this.props.id, name).catch(err => {\n      this.setState(currentState => {\n        return {\n          err: \"Cannot vote anymore\",\n          currentVote: currentState.currentVote - +name\n        };\n      });\n    });\n  };\n\n  render() {\n    const { currentVote, err } = this.state;\n    if (err) return <ErrDisplayer err={err} />;\n    return (\n      <div id=\"voter\">\n        <button onClick={this.handleClick} name=\"1\" disabled={currentVote > 0}>\n          ▲\n        </button>\n        <h5>{this.props.votes + this.state.currentVote}</h5>\n        <button onClick={this.handleClick} name=\"-1\" disabled={currentVote < 0}>\n          ▼\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Voter;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport Voter from \"./Voter\";\n\nconst ArticleCard = ({\n  article_id,\n  title,\n  votes,\n  comment_count,\n  created_at\n}) => {\n  return (\n    <article className=\"ArticleCard\">\n      <Link to={`/articles/${article_id}`}>\n        <h2>{title}</h2>\n      </Link>\n      <h2>{comment_count}</h2>\n      <h2>{created_at}</h2>\n      <Voter id={article_id} type={\"articles\"} votes={votes} />\n    </article>\n  );\n};\n\nexport default ArticleCard;\n","import React from 'react';\n\nconst Loader = () => {\n    return (\n        <h2>Loading...</h2>       \n    );\n};\n\nexport default Loader;","import React from \"react\";\nimport * as api from \"../utils/api\";\n\nconst DeleteComment = ({ comment_id, getComments, author, username }) => {\n\n  const handleSubmit = event => {\n    event.preventDefault(); \n    if(author === username) {\n      api.deleteComment(comment_id).then(() => {\n        getComments();\n      });  \n    }       \n  };\n  return (\n    <div id='DeleteButton'>\n      <button onClick={handleSubmit}>Delete</button>\n    </div>\n  );\n};\n\nexport default DeleteComment;\n","import React from \"react\";\nimport DeleteComment from \"./DeleteComment\";\nimport Voter from \"./Voter\";\n\nconst CommentCard = ({\n  comment_id,\n  body,\n  author,\n  votes,\n  created_at,\n  getComments,\n  username\n}) => {\n  return (\n    <div id='CommentCard'>\n      <ul>\n        <li>\n          <strong>Comment written by {author}:</strong> {body} \n          <strong>Votes: {votes}</strong>\n          <DeleteComment \n          comment_id={comment_id} \n          getComments={getComments}    \n          author={author}       \n          username={username}\n          />\n          <Voter votes={votes} id={comment_id} type={'comments'} />\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default CommentCard;\n","import React, { Component } from \"react\";\nimport * as api from \"../utils/api\";\n\nclass AddComment extends Component {\n  state = {\n    username: this.props.username,\n    body: \"\"\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value }, () => {});\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.body.replace(/\\s/g, \"\").length !== 0) {\n      api.postNewComment(this.props.article_id, { ...this.state }).then(() => {\n        this.setState({ username: this.props.username, body: \"\" });\n        this.props.getComments();\n      });\n    }\n  };\n\n  render() {\n    const { body } = this.state;\n    return (\n      <div>\n        <form>\n          <label>\n            Comment:\n            <input\n              type=\"text\"\n              name=\"body\"\n              onChange={this.handleChange}\n              value={body}\n              required\n            ></input>\n          </label>\n          <button onClick={this.handleSubmit}>Post Comment</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddComment;\n","import React, { Component } from \"react\";\nimport * as api from \"../utils/api\";\nimport Loader from \"./Loader\";\nimport ErrDisplayer from \"./ErrDisplayer\";\nimport CommentCard from \"../Components/CommentCard\";\nimport AddComment from \"./AddComment\";\n\nclass CommentsList extends Component {\n  state = {\n    comments: [],\n    isLoading: true,\n    err: \"\"\n  };\n\n  getComments = () => {\n    api\n      .fetchArticleCommentsByArticleID(this.props.article_id)\n      .then(comments => {\n        this.setState({ comments, isLoading: false });\n      })\n      .catch(({ response: { data } }) => {\n        this.setState({ err: data.err, isLoading: false });\n      });\n  };\n\n  componentDidMount() {\n    this.getComments();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.article_id !== this.props.article_id) {\n      this.getComments();\n    }\n  }\n\n  render() {\n    const { err } = this.state;\n    if (this.state.isLoading) return <Loader />;\n    if (err) return <ErrDisplayer err />;\n    return (\n      <div>\n        <AddComment\n          article_id={this.props.article_id}\n          getComments={this.getComments}\n          username={this.props.username}\n        />\n        {this.state.comments.map(comment => {\n          return (\n            <CommentCard\n              key={comment.comment_id}\n              getComments={this.getComments}\n              username={this.props.username}\n              {...comment}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default CommentsList;\n","import React, { Component } from \"react\";\nimport * as api from \"../utils/api\";\nimport Loader from \"./Loader\";\nimport ErrDisplayer from \"./ErrDisplayer\";\nimport CommentsList from \"./CommentsList\";\nimport Voter from \"../Components/Voter\";\n\nclass SingleArticle extends Component {\n  state = {\n    article: {},\n    isLoading: true,\n    err: \"\"\n  };\n\n  getArticle = () => {\n    api\n      .fetchArticle(this.props.article_id)\n      .then(article => {\n        this.setState({ article, isLoading: false });\n      })\n      .catch(({ response: { data } }) => {\n        this.setState({ err: data.err, isLoading: false });\n      });\n  };\n\n  componentDidMount() {\n    this.getArticle();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.article_id !== this.props.article_id) {\n      this.getArticle();\n    }\n  }\n\n  render() {\n    const { err } = this.state;\n    if (this.state.isLoading) return <Loader />;\n    const {\n      article_id,\n      title,\n      body,\n      votes,\n      topic,\n      author,\n      created_at,\n      comment_count\n    } = this.state.article;\n    if (err) return <ErrDisplayer err />;\n    return (\n      <article>\n        <h2>\n          {article_id}.{title}\n        </h2>\n        <Voter votes={votes} id={article_id} type={'articles'} />\n        <h3>Author: {author}</h3>\n        <h3>Created: {created_at}</h3>\n        <h3>Votes: {votes}</h3>\n        <h3>Topic: {topic}</h3>\n        <h2>{body}</h2>\n        <h3 >Comments: {comment_count}</h3>\n        <CommentsList article_id={article_id} username={this.props.username}/>\n      </article>\n    );\n  }\n}\n\nexport default SingleArticle;\n","import React from \"react\";\n\nconst Sorter = ({ handleSortbyChange }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleSortbyChange(event.target.value);\n  };\n\n  return (\n    <div>\n      <select onChange={handleSubmit}>\n        <option value=\"created_at\">Date</option>\n        <option value=\"comment_count\">Comments</option>\n        <option value=\"votes\">Votes</option>\n      </select>\n    </div>\n  );\n};\n\nexport default Sorter;\n","import React, { Component } from \"react\";\nimport * as api from \"../utils/api\";\nimport ArticleCard from \"./ArticleCard\";\nimport SingleArticle from \"./SingleArticle\";\nimport { Router } from \"@reach/router\";\nimport Loader from \"./Loader\";\nimport ErrDisplayer from \"./ErrDisplayer\";\nimport Sorter from \"./Sorter\";\n\nclass ArticleList extends Component {\n  state = {\n    articles: [],\n    isLoading: true,\n    err: \"\",\n    sortby: \"\"\n  };\n\n  getArticles = () => {\n    api\n      .fetchAllArticles(this.props.topic_slug, this.state.sortby)\n      .then(articles => {\n        this.setState({ articles, isLoading: false });\n      })\n      .catch(({ response: { data } }) => {\n        this.setState({ err: data.err, isLoading: false });\n      });\n  };\n\n  handleSortbyChange = criteria => {\n    console.log(criteria);\n    this.setState({ sortby: criteria }, () => {\n      console.log(this.state);\n      this.getArticles();\n    });\n  };\n\n  componentDidMount() {\n    this.getArticles();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.topic_slug !== this.props.topic_slug) {\n      this.getArticles();\n    }\n  }\n\n  render() {\n    const { err } = this.state;\n    if (this.state.isLoading) return <Loader />;\n    if (err) return <ErrDisplayer err />;\n    return (\n      <div className=\"ArticleList\">\n        <Sorter handleSortbyChange={this.handleSortbyChange} />\n        {this.state.articles.map(article => {\n          return <ArticleCard key={article.article_id} {...article} />;\n        })}\n        <Router>\n          <SingleArticle path=\":article_id\" />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default ArticleList;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nconst TopicCard = ({ slug, description }) => {\n  return (\n    <article id=\"TopicsCard\">\n      <Link to={`/articles/topic/${slug}`}>\n        <h2>{slug}</h2>\n      </Link>\n      <p>{description}</p>\n    </article>\n  );\n};\n\nexport default TopicCard;\n","import React, { Component } from \"react\";\nimport * as api from \"../utils/api\";\nimport TopicCard from \"./TopicCard\";\nimport Loader from \"./Loader\";\n\nclass TopicList extends Component {\n  state = {\n    topics: [],\n    isLoading: true\n  };\n\n  getTopics = () => {\n    api.fetchAllTopics().then(topics => {\n      this.setState({ topics, isLoading: false });\n    });\n  };\n\n  componentDidMount() {\n    this.getTopics();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.title !== this.props.title) {\n      this.getTopics();\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) return <Loader />;\n    return (\n      <div>\n        {this.state.topics.map(topic => {\n          return <TopicCard key={topic.slug} {...topic} />;\n        })}\n      </div>\n    );\n  }\n}\n\nexport default TopicList;\n","import React, { Component } from \"react\";\nimport * as api from \"../utils/api\";\nimport Loader from \"./Loader\";\nimport ErrDisplayer from \"./ErrDisplayer\";\n\nclass SingleTopic extends Component {\n  state = {\n    articles: [],\n    isLoading: true,\n    err: \"\"\n  };\n\n  getArticles = () => {\n    api\n      .fetchAllArticles(this.props.slug)\n      .then(articles => {\n        this.setState({ articles, isLoading: false });\n      })\n      .catch(({ response: { data } }) => {\n        console.log(data.err)\n        this.setState({ err: data.err, isLoading: false });\n      });\n  };\n\n  componentDidMount() {\n    this.getArticle();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.topic !== this.props.topic) {\n      this.getArticle();\n    }\n  }\n\n  render() {\n    const { err } = this.state;\n    if (err) return <ErrDisplayer err />;\n    if (this.state.isLoading) return <Loader />;\n    const { title } = this.state.articles;\n    \n    return (\n      <div>\n        <h2>{title}</h2>\n      </div>\n    );\n  }\n}\n\nexport default SingleTopic;\n","import React, { Component } from 'react';\n\nclass HomePage extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Welcome to Northcoders News</h1>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport { Router } from '@reach/router'\nimport ArticleList from './Components/ArticleList'\nimport SingleArticle from './Components/SingleArticle'\nimport TopicList from './Components/TopicList';\nimport ErrDisplayer from './Components/ErrDisplayer';\nimport ArticleListByTopic from './Components/ArticleListByTopic';\nimport HomePage from './Components/HomePage';\n\n\nclass App extends Component {\n  state = {\n    username: 'tickle122'\n  };\n\n  render() {\n    return (\n    <div className=\"App\">\n      <Header username={this.state.username}/>     \n      <Router>\n        <HomePage path='/'/>\n        <TopicList path='/topics/*' />\n        <ArticleList path='/articles/' />\n        <ArticleList path='/articles/topic/:topic_slug' />\n        <SingleArticle username={this.state.username} path='/articles/:article_id' />\n        <ArticleListByTopic path='/articles' />\n        <ErrDisplayer default />\n      </Router>\n    </div>\n    );\n  }  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const axios = require('axios')\n\nexports.fetchAllArticles = (topic, sort_by) => {\n  return axios\n    .get('https://satnams-news-api.herokuapp.com/api/articles', { params: { topic, sort_by } })\n    .then(({ data: { articles } }) => {\n      return articles;\n    });\n}\n\n\nexports.fetchArticle = (article_id) => {\n  return axios\n    .get(`https://satnams-news-api.herokuapp.com/api/articles/${article_id}`)\n    .then(({ data: { article } }) => {\n      return article;\n    });\n}\n\nexports.fetchAllTopics = () => {\n  return axios\n    .get('https://satnams-news-api.herokuapp.com/api/topics')\n    .then(({ data: { topics } }) => {\n      return topics;\n    });\n}\n\nexports.fetchArticleCommentsByArticleID = (article_id) => {\n  return axios\n    .get(`https://satnams-news-api.herokuapp.com/api/articles/${article_id}/comments`)\n    .then(({ data: { comments } }) => {\n      return comments;\n    });\n}\n\nexports.postNewComment = (article_id, comment) => {\n  return axios\n    .post(`https://satnams-news-api.herokuapp.com/api/articles/${article_id}/comments`, comment)\n    .then(({ data: { comment } }) => {\n      return comment;\n    });\n}\n\nexports.deleteComment = (comment_id) => {\n  return axios\n    .delete(`https://satnams-news-api.herokuapp.com/api/comments/${comment_id}`)\n    .then(() => {\n    });\n}\n\nexports.patchVotes = (path, id, vote) => {\n  return axios\n    .patch(`https://satnams-news-api.herokuapp.com/api/${path}/${id}`, { 'inc_votes': vote })\n    .then(({ data: { votes } }) => {\n      return votes\n    });\n}\n\n\n\n"],"sourceRoot":""}